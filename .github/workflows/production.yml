name: production

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  create-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.LDN_GITHUB_TOKEN }}
      - name: Create environment file
        run: |
          cat <<EOF > .env
          PORT=${{ vars.PORT }}
          SALT_ROUNDS=${{ vars.SALT_ROUNDS }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          NODE_ENV=${{ vars.NODE_ENV }}
          #MINIO
          MINIO_PORT=${{ vars.MINIO_PORT }}
          MINIO_HOST=${{ vars.MINIO_HOST }}
          MINIO_BUCKET_NAME=${{ vars.MINIO_BUCKET_NAME }}
          MINIO_ACCESS_KEY=${{ secrets.MINIO_ACCESS_KEY }}
          MINIO_SECRET_KEY=${{ secrets.MINIO_SECRET_KEY }}
          MINIO_ROOT_USER=${{ vars.MINIO_ROOT_USER }}
          MINIO_ROOT_PASSWORD=${{ secrets.MINIO_ROOT_PASSWORD }}
          #DATABASE
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER=${{ vars.POSTGRES_USER }}
          POSTGRES_DB=${{ vars.POSTGRES_DB }}
          DATABASE_PORT=${{ vars.DATABASE_PORT }}
          DATABASE_HOST=${{ vars.DATABASE_HOST }}
          #PGADMIN
          PGADMIN_DEFAULT_EMAIL=${{ vars.PGADMIN_DEFAULT_EMAIL }}
          PGADMIN_DEFAULT_PASSWORD=${{ vars.PGADMIN_DEFAULT_PASSWORD }}
          EOF

      - name: Build image
        run: |
          docker build -t ldn_api_server .
          docker tag ldn_api_server ghcr.io/alexisfrene/ldn_api_server:latest
          docker push ghcr.io/alexisfrene/ldn_api_server:latest
  deploy:
    needs: create-docker-image
    runs-on: ubuntu-latest
    steps:
      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: SSH into server and deploy
        run: |
          sshpass -p ${{ secrets.LDN_VPS_PASSWORD }} ssh -o PubkeyAuthentication=no -o PreferredAuthentications=password -o StrictHostKeyChecking=no -p 5367 ${{ vars.LDN_VPS_USER_ACTIONS }}@${{ vars.LDN_VPS_HOST }} <<EOF
            cd /home/${{ vars.LDN_VPS_USER_ACTIONS }}/ldn_api_server/

            # Login to GitHub Container Registry
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.LDN_GITHUB_TOKEN }}

            # Pull latest image of your API
            docker pull ghcr.io/alexisfrene/ldn_api_server:latest

            # Stop and remove only the API container if exists
            docker stop ghcr.io/alexisfrene/ldn_api_server:latest || true
            docker rm ghcr.io/alexisfrene/ldn_api_server:latest || true

            # Run everything with Docker Compose
            docker compose down
            docker compose up -d
          EOF
